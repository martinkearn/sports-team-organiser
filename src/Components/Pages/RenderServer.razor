@page "/RenderServer"
@inject IGameService GameService
@rendermode InteractiveServer

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-people-group me-2"></i> @pageTitle</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Date</th>
            <th scope="col">Forecast Players</th>
            <th scope="col">Actual Players</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var game in games)
        {
            <tr>
                <td><GameTitle GameRowKey="@game.GameEntity.RowKey" Link="true" /></td>
                <td>@game.PlayersAtGame.Count()</td>
                <td>@game.PlayersAtGame.Where(pag => pag.PlayerAtGameEntity.Played).Count()</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Game> games = new();

    private string pageTitle;

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    private async Task RefreshData()
    {
        games = await GameService.GetGames();
        pageTitle = "Games (InteractiveServer mode)";
    }
}