@page "/games/{GameRowKey}/game"
@inject IPlayerService PlayerService
@inject IGameService GameService
@inject ITransactionService TransactionService
@inject NavigationManager Navigation

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-people-group me-2"></i> @pageTitle</h1>

<p>@game.PlayersAtGame.Where(p => p.PlayerAtGameEntity.Forecast == PlayingOptions.Yes.ToString()).Count() yes, @game.PlayersAtGame.Where(p => p.PlayerAtGameEntity.Forecast == PlayingOptions.Maybe.ToString()).Count() maybe, @game.PlayersAtGame.Where(p => p.PlayerAtGameEntity.Played == true).Count() actual</p>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" @onclick="SwitchTabPlayers">
            <span class="d-md-none"><i class="fa-solid fa-users-viewfinder"></i></span>
            <span class="d-none d-md-block">Players</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" @onclick="SwitchTabTeamsheet">
            <span class="d-md-none"><i class="fa-solid fa-people-group"></i></span>
            <span class="d-none d-md-block">Teamsheet</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link active">
            <span class="d-md-none"><i class="fa-solid fa-clipboard-list"></i></span>
            <span class="d-none d-md-block">Game</span>
        </a>
    </li>
</ul>

<h4>Game details</h4>
<p>Date & Time: @game.GameEntity.Date.DayOfWeek @game.GameEntity.Date.ToString("dd MMM yyyy HH:mm")</p>

<h4>Goals</h4>
<div class="mb-3">
    <label class="form-label">Team A</label>
    <div class="input-group col-12">
        <InputNumber type="number" min="0" class="form-control" @bind-Value="game.GameEntity.TeamAGoals" @bind-Value:after="() => Edit()"/>
        <button class="btn btn-outline-secondary" @onclick="() => Goal(Enums.Team.A, -1)"><i class="fa-solid fa-minus"></i></button>
        <button class="btn btn-outline-secondary" @onclick="() => Goal(Enums.Team.A, 1)"><i class="fa-solid fa-plus"></i></button>
    </div>
</div>
<div class="mb-3">
    <label class="form-label">Team B</label>
    <div class="input-group col-12">
        <InputNumber type="number" min="0" class="form-control" @bind-Value="game.GameEntity.TeamBGoals" @bind-Value:after="() => Edit()"/>
        <button class="btn btn-outline-secondary" @onclick="() => Goal(Enums.Team.B, -1)"><i class="fa-solid fa-minus"></i></button>
        <button class="btn btn-outline-secondary" @onclick="() => Goal(Enums.Team.B, 1)"><i class="fa-solid fa-plus"></i></button>
    </div>
</div>

<div class="modal-footer px-0">
    <DeleteButtonWithCheck EntityRowKey="@game.GameEntity.RowKey" EntityLabel="@pageTitle" EntityType="@typeof(GameEntity).ToString()" NavigateToUrl="/games" ButtonLabel="Delete" />
</div>

@code {
    [Parameter]
    public string GameRowKey { get; set; }

    private Game game;

    private string pageTitle;

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    async Task Edit()
    {
        await GameService.UpsertGameEntity(game.GameEntity);
    }

    async Task Goal(Enums.Team team, int goal)
    {
        if (team == Enums.Team.A)
        {
            game.GameEntity.TeamAGoals += goal;
        }
        else if (team == Enums.Team.B)
        {
            game.GameEntity.TeamBGoals += goal; 
        }
        await GameService.UpsertGameEntity(game.GameEntity);
    }


    async Task RefreshData()
    {
        game = await GameService.GetGame(GameRowKey);
        pageTitle = $"{game.GameEntity.Date.ToString("dd MMM yyyy")} Game";
    }

    private void SwitchTabPlayers() => Navigation.NavigateTo($"/games/{@GameRowKey}/players");
    private void SwitchTabTeamsheet() => Navigation.NavigateTo($"/games/{@GameRowKey}/teamsheet");
}