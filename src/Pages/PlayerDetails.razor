@page "/players/{PlayerRowKey}"
@inject IPlayerService PlayerService
@inject NavigationManager Navigation

<PageTitle>TNF - @pageTitle</PageTitle>

<h1>@pageTitle</h1>

<div class="mb-3">
    <label class="form-label">RowKey</label>
    <span class="form-control-plaintext">@player.PlayerEntity.RowKey</span>
</div>

<div class="mb-3">
    <label class="form-label">Name</label>
    <InputText class="form-control" id="addName" @bind-Value="player.PlayerEntity.Name" @bind-Value:after="() => Edit()" />
</div>

<div class="mb-3">
    <label fclass="form-label">Position</label>
    <InputSelect class="form-select" @bind-Value="player.PlayerEntity.Position" @bind-Value:after="() => Edit()">
        @foreach (string option in Enum.GetNames(typeof(PlayerPosition)))
        {
            <option value="@option">@option</option>
        }
    </InputSelect>
</div>

<div class="mb-3">
    <label class="form-label">Default Rate</label>
    <div class="input-group">
        <span class="input-group-text">£</span>
        <InputNumber type="number" min="0" class="form-control" id="addDefaultRate" @bind-Value="player.PlayerEntity.DefaultRate" @bind-Value:after="() => Edit()"/>
    </div>
    <div class="form-text">Default rate per game. Usually £3 or £4.</div>
</div>

<div class="mb-3">
    <label class="form-label">Balance</label>
    <span class="form-control-plaintext">
        <CurrencyDisplay Amount="@player.Balance"/>
    </span>
</div>

<div class="modal-footer">
    <a class="btn btn-secondary" href="/players/"><i class="fa-solid fa-arrow-left"></i>All Players</a>
    <button class="btn btn-secondary" @onclick="Delete"><i class="fa-solid fa-trash"></i> Delete</button>
</div>

@code {
    [Parameter]
    public string PlayerRowKey { get; set; }

    private Player player;

    private string pageTitle;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    async Task Edit()
    {
        await PlayerService.UpsertPlayerEntity(player.PlayerEntity);
    }

    async Task Delete()
    {
        await PlayerService.DeletePlayer(player.PlayerEntity.RowKey);
        Navigation.NavigateTo("/players");
    }

    private void RefreshData()
    {
        player = PlayerService.GetPlayer(PlayerRowKey);
        pageTitle = $"Player: {player.PlayerEntity.Name}";
    }
}