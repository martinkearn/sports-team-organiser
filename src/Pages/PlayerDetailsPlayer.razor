@page "/players/{PlayerRowKey}/player"
@inject IPlayerService PlayerService
@inject IGameService GameService
@inject NavigationManager Navigation

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @pageTitle</h1>

<AuthorizeView Policy="IsAdminEmail">
    <Authorized>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active">Player</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" @onclick="SwitchTabTransactions">Transactions</a>
            </li>
        </ul>

        <div class="mb-3">
            <label class="form-label">Name</label>
            <InputText class="form-control" id="addName" @bind-Value="player.PlayerEntity.Name" @bind-Value:after="() => Edit()" />
        </div>

        <div class="mb-3">
            <label fclass="form-label">Position</label>
            <InputSelect class="form-select" @bind-Value="player.PlayerEntity.Position" @bind-Value:after="() => Edit()">
                @foreach (string option in Enum.GetNames(typeof(Enums.PlayerPosition)))
                {
                    <option value="@option">@option</option>
                }
            </InputSelect>
        </div>

        <div class="mb-3">
            <label class="form-label">Admin Rating</label>
            <InputNumber class="form-control" id="addAdminRating" min="1" max="5" @bind-Value="player.PlayerEntity.AdminRating" @bind-Value:after="() => Edit()" />
            <div class="form-text">1-5 (5 high).</div>
        </div>

        <div class="mb-3">
            <label class="form-label">Default Rate</label>
            <div class="input-group">
                <span class="input-group-text">£</span>
                <InputNumber type="number" min="0" class="form-control" id="addDefaultRate" @bind-Value="player.PlayerEntity.DefaultRate" @bind-Value:after="() => Edit()"/>
            </div>
            <div class="form-text">Default rate per game. Usually £3 or £4.</div>
        </div>

        <div class="mb-3">
            <label class="form-label">Balance</label>
            <span class="form-control-plaintext">
                <CurrencyDisplay Amount="@player.Balance"/>
            </span>
        </div>

        <div class="modal-footer">
            <a class="btn btn-secondary" href="/players/"><i class="fa-solid fa-arrow-left"></i>All Players</a>
            <DeleteButtonWithCheck EntityRowKey="@player.PlayerEntity.RowKey" EntityLabel="@player.PlayerEntity.Name" EntityType="@typeof(PlayerEntity).ToString()" NavigateToUrl="/players" ButtonLabel="Delete" />
        </div>
    </Authorized>
    <NotAuthorized>
        <h4>Access Denied!</h4>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string PlayerRowKey { get; set; }

    private Player player;

    private List<Game> games = new();

    private string pageTitle;

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    async Task Edit()
    {
        await PlayerService.UpsertPlayerEntity(player.PlayerEntity);
    }

    private async Task RefreshData()
    {
        games = await GameService.GetGames();
        player = PlayerService.GetPlayer(PlayerRowKey);
        pageTitle = $"{player.PlayerEntity.Name}";
    }

    private void SwitchTabTransactions() => Navigation.NavigateTo($"/players/{@PlayerRowKey}/transactions");
}