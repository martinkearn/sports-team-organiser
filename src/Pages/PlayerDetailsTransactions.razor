@page "/players/{PlayerRowKey}/transactions"
@inject IPlayerService PlayerService
@inject IGameService GameService
@inject NavigationManager Navigation

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @pageTitle</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" @onclick="SwitchTabPlayer">Player</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active">Transactions</a>
    </li>
</ul>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Date</th>
            <th scope="col">Amount</th>
            <th scope="col" class="d-none d-lg-table-cell">Game</th>
            <th scope="col" class="d-none d-lg-table-cell">Notes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transactionEntity in player.Transactions)
        {
            var game = games.SingleOrDefault(o => o.GameEntity.RowKey == transactionEntity.GameRowKey);
            <tr>
                <td><a href="/transactions/@transactionEntity.RowKey">@transactionEntity.Date.ToString("dd MMM yyyy HH:mm")</a></td>
                <td><CurrencyDisplay Amount="@transactionEntity.Amount" /></td>
                <td class="d-none d-lg-table-cell">
                    @if (game != default)
                    {
                        <GameTitle GameRowKey="@game.GameEntity.RowKey" Link="true" />
                    }
                </td>
                <td class="d-none d-lg-table-cell">@transactionEntity.Notes</td>
            </tr>
        }
    </tbody>
</table>

<div class="modal-footer">
    <a class="btn btn-secondary" href="/players/"><i class="fa-solid fa-arrow-left"></i>All Players</a>
    <DeleteButtonWithCheck EntityRowKey="@player.PlayerEntity.RowKey" EntityLabel="@player.PlayerEntity.Name" EntityType="@typeof(PlayerEntity).ToString()" NavigateToUrl="/players" />
</div>

@code {
    [Parameter]
    public string PlayerRowKey { get; set; }

    private Player player;

    private List<Game> games = new();

    private string pageTitle;

    private string currentTab = "player";

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    private async Task RefreshData()
    {
        games = await GameService.GetGames();
        player = PlayerService.GetPlayer(PlayerRowKey);
        pageTitle = $"{player.PlayerEntity.Name}";
    }

    private void SwitchTabPlayer() => Navigation.NavigateTo($"/players/{@PlayerRowKey}/player");
}