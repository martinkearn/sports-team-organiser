@page "/transactions/add"
@inject ITransactionService TransactionService
@inject IPlayerService PlayerService
@inject IGameService GameService
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.WebUtilities 

<PageTitle>TNF - @pageTitle</PageTitle>

<AuthorizeView Policy="IsAdminEmail">
    <Authorized>
        <h1><i class="fa-solid fa-coins me-2"></i> @pageTitle</h1>

        <EditForm Model="@newTransactionEntity" OnValidSubmit="Add" Context="NewTransactionEntity">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="addPlayerRowKey" class="form-label">Player</label>
                <InputSelect class="form-select" @bind-Value="newTransactionEntity.PlayerRowKey">
                    <option value="">Select Player ...</option>
                    @foreach (var player in players)
                    {
                        <option value="@player.PlayerEntity.RowKey">@player.PlayerEntity.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="mb-3">
                <label for="addDate" class="form-label">Date</label>
                <InputDate class="form-control" id="addDate" @bind-Value="newTransactionEntity.Date" />
            </div>

            <div class="mb-3">
                <label for="addNotes" class="form-label">Notes</label>
                <InputText class="form-control" id="addNotes" @bind-Value="newTransactionEntity.Notes" />
            </div>

            <div class="mb-3">
                <label for="addAmount" class="form-label">Amount</label>
                <div class="input-group">
                    <span class="input-group-text">Â£</span>
                    <InputNumber type="number" class="form-control" id="addAmount" @bind-Value="newTransactionEntity.Amount" />
                </div>
                <div class="form-text">Positive for payments, negative to pay for a played game.</div>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Add Transaction</button>
            </div>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        <h4>Access Denied!</h4>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string gameRowKey = string.Empty;

    private List<Player> players = new();

    private TransactionEntity newTransactionEntity = new();

    private string pageTitle;

    protected override void OnInitialized()
    {
        // Get query string params
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        if(QueryHelpers.ParseQuery(uri.Query).TryGetValue("game", out var token))
        {
            gameRowKey = token.First();
        }
        
        RefreshData();
    }

    protected async Task Add()
    {
        await TransactionService.UpsertTransactionEntity(newTransactionEntity);
        Navigation.NavigateTo("/transactions");
    }

    private void RefreshData()
    {
        newTransactionEntity = new();

        players = PlayerService.GetPlayers();

        pageTitle = "Add Transaction";
    }
}