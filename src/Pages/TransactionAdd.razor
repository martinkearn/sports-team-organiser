@page "/transactions/add"
@inject ITransactionService TransactionService
@inject IPlayerService PlayerService
@inject IGameService GameService
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.WebUtilities 

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @pageTitle</h1>

<EditForm Model="@newTransactionEntity" OnValidSubmit="Add">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="addPlayerRowKey" class="form-label">Player</label>
        <InputSelect class="form-select" @bind-Value="newTransactionEntity.PlayerRowKey">
            <option value="">Select Player ...</option>
            @foreach (var player in players)
            {
                <option value="@player.PlayerEntity.RowKey">@player.PlayerEntity.Name</option>
            }
        </InputSelect>
    </div>

    <div class="mb-3">
        <label for="addPlayerRowKey" class="form-label">Associated Game</label>
        <InputSelect class="form-select" @bind-Value="newTransactionEntity.GameRowKey">
            <option value="">Select Game ...</option>
            @foreach (var game in games)
            {
                <option value="@game.GameEntity.RowKey">@game.GameEntity.Date.Date.ToLongDateString()</option>
            }
        </InputSelect>
        <div class="form-text">Optionally associate the transaction with a game.</div>
    </div>

    <div class="mb-3">
        <label for="addDate" class="form-label">Date</label>
        <InputDate class="form-control" id="addDate" @bind-Value="newTransactionEntity.Date" />
    </div>

    <div class="mb-3">
        <label for="addNotes" class="form-label">Notes</label>
        <InputText class="form-control" id="addNotes" @bind-Value="newTransactionEntity.Notes" />
    </div>

    <div class="mb-3">
        <label for="addAmount" class="form-label">Amount</label>
        <div class="input-group">
            <span class="input-group-text">Â£</span>
            <InputNumber type="number" class="form-control" id="addAmount" @bind-Value="newTransactionEntity.Amount" />
        </div>
        <div class="form-text">Positive for payments, negative to pay for a played game.</div>
    </div>

    <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Add Transaction</button>
    </div>
</EditForm>

@code {
    private string gameRowKey = string.Empty;

    private List<Player> players = new();

    private List<Game> games = new();

    private TransactionEntity newTransactionEntity = new();

    private string pageTitle;

    protected override async Task OnInitializedAsync()
    {
        // Get query string params
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        if(QueryHelpers.ParseQuery(uri.Query).TryGetValue("game", out var token))
        {
            gameRowKey = token.First();
        }
        
        await RefreshData();
    }

    protected async Task Add()
    {
        await TransactionService.UpsertTransactionEntity(newTransactionEntity);
        Navigation.NavigateTo("/transactions");
    }

    async Task RefreshData()
    {
        newTransactionEntity = new();
        if (!string.IsNullOrEmpty(gameRowKey))
        {
            newTransactionEntity.GameRowKey = gameRowKey;
        }

        players = PlayerService.GetPlayers();

        games = await GameService.GetGames();

        pageTitle = "Add Transaction";
    }
}