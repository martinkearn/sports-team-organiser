@page "/transactions"
@inject ITransactionService TransactionService

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @pageTitle</h1>

<div>
    <a class="btn btn-secondary me-3 mb-3" href="/transactions/add"><i class="fa-solid fa-plus"></i> Add Transaction</a>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Date</th>
            <th scope="col">Amount</th>
            <th scope="col">Player</th>
            <th scope="col" class="d-none d-lg-table-cell">Game</th>
            <th scope="col" class="d-none d-lg-table-cell">Notes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transaction in transactions)
        {
            <tr>
                <td><a href="/transactions/@transaction.TransactionEntity.RowKey">@transaction.TransactionEntity.Date.ToString("dd MMM yyyy HH:mm")</a></td>
                <td><CurrencyDisplay Amount="@transaction.TransactionEntity.Amount" /></td>
                <td>@transaction.Player.PlayerEntity.Name</td>
                @if (transaction.Game != null)
                {
                    <td class="d-none d-lg-table-cell"><GameTitle GameRowKey="@transaction.Game.GameEntity.RowKey" Link="true" /></td>
                }
                else
                {
                    <td class="d-none d-lg-table-cell"></td>
                }
                <td class="d-none d-lg-table-cell">@transaction.TransactionEntity.Notes</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Transaction> transactions = new();

    private string pageTitle;

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    async Task RefreshData()
    {
        transactions = await TransactionService.GetTransactions();
        pageTitle = "Transactions";
    }
}