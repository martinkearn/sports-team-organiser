@page "/transactions/add"
@inject IStorageService StorageService
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.WebUtilities 

<PageTitle>TNF - Add Transaction</PageTitle>

<h1>Add a Transaction</h1>

<EditForm Model="@newTransaction" OnValidSubmit="AddTransaction">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="addPlayerRowKey" class="form-label">Player</label>
        <InputSelect class="form-select" @bind-Value="newTransaction.PlayerRowKey">
            <option value="">Select player ...</option>
            @foreach (var player in players)
            {
                <option value="@player.RowKey">@player.Name</option>
            }
        </InputSelect>
    </div>

    <div class="mb-3">
        <label for="addPlayerRowKey" class="form-label">Associated Game</label>
        <InputSelect class="form-select" @bind-Value="newTransaction.GameRowKey">
            <option value="">Select game ...</option>
            @foreach (var game in games)
            {
                <option value="@game.RowKey">@game.Date.Date.ToShortDateString()</option>
            }
        </InputSelect>
        <div class="form-text">Optionally associate the transaction with a game.</div>
    </div>

    <div class="mb-3">
        <label for="addDate" class="form-label">Date</label>
        <InputDate class="form-control" id="addDate" @bind-Value="newTransaction.Date" />
    </div>

    <div class="mb-3">
        <label for="addNotes" class="form-label">Notes</label>
        <InputText class="form-control" id="addNotes" @bind-Value="newTransaction.Notes" />
    </div>

    <div class="mb-3">
        <label for="addAmount" class="form-label">Amount</label>
        <div class="input-group">
            <span class="input-group-text">Â£</span>
            <InputNumber type="number" class="form-control" id="addAmount" @bind-Value="newTransaction.Amount" />
        </div>
        <div class="form-text">Positive for payments, negative to pay for a played game.</div>
    </div>

    <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Add Transaction</button>
    </div>
</EditForm>

@code {
    private string gameRowKey = string.Empty;

    private List<Player> players = new();

    private List<Game> games = new();

    private Transaction newTransaction = new();

    protected override void OnInitialized()
    {
        // Get query string params
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        if(QueryHelpers.ParseQuery(uri.Query).TryGetValue("game", out var token))
        {
            gameRowKey = token.First();
        }
        
        RefreshData();
    }

    protected async Task AddTransaction()
    {
        await StorageService.UpsertEntity<Transaction>(newTransaction);
        Navigation.NavigateTo("/transactions");
    }

    private void RefreshData()
    {
        newTransaction = new();
        if (!string.IsNullOrEmpty(gameRowKey))
        {
            newTransaction.GameRowKey = gameRowKey;
        }

        players = StorageService.QueryEntities<Player>(default)            
            .OrderBy(p => p.Name)
            .ToList();

        games = StorageService.QueryEntities<Game>(default)
            .OrderByDescending(g => g.Date)
            .ToList();
    }
}