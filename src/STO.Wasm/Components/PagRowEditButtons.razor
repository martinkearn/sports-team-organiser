@inject IGameEntityService GameEntityService
@inject ITransactionEntityService TransactionEntityService

@if (pagEntity.Played)
{
    <button type="button" class="btn btn-outline-secondary btn-sm active d-none d-md-inline" @onclick="TogglePlayed"> Played</button>
}
else
{
    <button type="button" class="btn btn-outline-secondary btn-sm d-none d-md-inline" @onclick="TogglePlayed"> Not Played</button>
}
<span></span>
<button type="button" class="btn btn-outline-secondary btn-sm d-none d-md-inline" @onclick="SwitchPagTeam">@pagEntity.Team <i class="fa-solid fa-repeat"></i></button>
<button type="button" class="btn btn-outline-secondary btn-sm d-none d-lg-inline" @onclick="() => AddTransactionForPlayer(3)"><i class="fa-solid fa-plus"></i> Â£3 - To Do player default rate</button>
<a type="button" class="btn btn-outline-secondary btn-sm d-inline" href="/pags/@pagEntity.RowKey"><i class="fa-solid fa-edit"></i> Edit</a>

@code {
    [Parameter]
    public PlayerAtGameEntity pagEntity { get; set; } = default!;

    [Parameter]
    public EventCallback RefreshMainPage { get; set; } = default!;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void TogglePlayed()
    {
        GameEntityService.TogglePlayerAtGamePlayed(pagEntity, null);
        RefreshMainPage.InvokeAsync();
    }

    private void SwitchPagTeam()
    {
        if (pagEntity.Team == "A")
        {
            pagEntity.Team = "B";
        }
        else if (pagEntity.Team == "B")
        {
            pagEntity.Team = "";
        }
        else
        {
            pagEntity.Team = "A";
        }
        GameEntityService.UpsertPlayerAtGameEntity(pagEntity);
        RefreshMainPage.InvokeAsync();
    }

    private void AddTransactionForPlayer(double amount)
    {
        var newTransactionEntityForPag = new TransactionEntity()
            {
                Date = DateTimeOffset.UtcNow,
                Notes = GameEntityService.GetNotesForGame(pagEntity.GameRowKey),
                PlayerRowKey = pagEntity.PlayerRowKey,
                Amount = amount
            };
        TransactionEntityService?.UpsertTransactionEntity(newTransactionEntityForPag);
        RefreshMainPage.InvokeAsync();
    }

    private void RefreshData()
    {
        var game = GameEntityService.GetGameEntity(pagEntity.GameRowKey);
        RefreshMainPage.InvokeAsync();
    }

}