@page "/quickaddpag"
@inject IPlayerEntityService PlayerEntityService
@inject IGameEntityService GameEntityService
@inject NavigationManager Navigation

@if (dataReady)
{
    <PageTitle>Add Player to Game</PageTitle>

    <h1><i class="fa-solid fa-people-group me-2"></i> Add Player to Game</h1>

    <EditForm Model="@newPagEntity" OnValidSubmit="AddPagEntity" Context="NewPagEntity">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="addPlayerRowKey" class="form-label">Player</label>
            <InputSelect class="form-select" @bind-Value="newPagEntity.PlayerRowKey">
                <option value="">Select Player ...</option>
                @foreach (var pe in playerEntities)
                {
                    <option value="@pe.RowKey">@pe.Name</option>
                }
            </InputSelect>
        </div>

        @if (nextGameEntity is not null)
        {
            <p>Next game is <GameEntityTitle GameEntity="@nextGameEntity" /></p>
        }
        else
        {
            <p>No future games avaliable.</p>
        }

        <div class="mb-3">
            <label for="addGameRowKey" class="form-label">Game</label>
            <InputSelect class="form-select" @bind-Value="newPagEntity.GameRowKey">
                <option value="">Select Game ...</option>
                @foreach (var ge in gameEntities)
                {
                    var gameRowKey = ge.RowKey;
                    if (gameRowKey == nextGameEntity?.RowKey)
                    {
                        <option value="@gameRowKey" selected><GameEntityTitle GameEntity="@ge" Link="false" /></option>
                    }
                    else
                    {
                        <option value="@gameRowKey"><GameEntityTitle GameEntity="@ge" Link="false" /></option>
                    }
                }
            </InputSelect>
        </div>

        <div class="modal-footer">
            <button type="submit" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Add Player</button>
        </div>
    </EditForm>
}

@code {
    private List<GameEntity> gameEntities = new();

    private List<PlayerEntity> playerEntities = new();

    private PlayerAtGameEntity newPagEntity = new();

    private GameEntity nextGameEntity = default!;

    private bool dataReady = false;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private async Task AddPagEntity()
    {
        await GameEntityService.UpsertPlayerAtGameEntityAsync(newPagEntity);
        var nav = $"/games/{newPagEntity.GameRowKey}";
        Navigation.NavigateTo(nav);
    }

    private void RefreshData()
    {
        gameEntities = GameEntityService.GetGameEntities();
        playerEntities = PlayerEntityService.GetPlayerEntities();
        nextGameEntity = GameEntityService.GetNextGameEntity();

        newPagEntity = new PlayerAtGameEntity()
        {
            Played = false,
            Forecast = PlayingOptions.Yes.ToString(),
            GameRowKey = nextGameEntity.RowKey,
        };

        dataReady = true;
    }
}