@page "/admin/games"
@layout AdminLayout
@inject IGameService GameService
@inject IPlayerAtGameEntityService PlayerAtGameEntityService

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-people-group me-2"></i> @_pageTitle</h1>

<p>@_games.Count games.</p>

<table class="table table-striped">
	<thead>
	<tr>
		<th scope="col">Date</th>
		<th scope="col">Yes Players</th>
		<th scope="col">Maybe Players</th>
		<th scope="col" class="d-none d-lg-table-cell">Notes</th>
	</tr>
	</thead>
	<tbody>
	@foreach (var g in _games)
	{
		var pags = PlayerAtGameEntityService.GetPlayerAtGameEntitiesForGame(g.Id);
		<tr>
			<td><GameLink GameUrlSegment="@g.UrlSegment" GameLabel="@g.Label" /></td>
			<td>@pags.Count(pag => pag.Forecast == Enums.PlayingStatus.Yes)</td>
			<td>@pags.Count(pag => pag.Forecast == Enums.PlayingStatus.Maybe)</td>
			<td class="d-none d-lg-table-cell">@g.Notes</td>
		</tr>
	}
	</tbody>
</table>

<p>Showing @_games.Count games.</p>
<ShowMore ParentPageCallback="ShowMore" />

@code {
	[CascadingParameter] public MainLayout MainLayout { get; set; } = null!;
	
	private List<Game> _games = [];
	
	private const int ItemsPerPage = 20;

	private string _pageTitle = null!;

	protected override void OnInitialized()
	{
		RefreshData();
	}
	
	private void ShowMore()
	{
		_games.AddRange(GameService.GetGames(_games.Count, ItemsPerPage));
	}

	private void RefreshData()
	{
		_games = GameService.GetGames(0, ItemsPerPage);
		_pageTitle = "Games";
		MainLayout.SetPageTitle(_pageTitle);
	}
}