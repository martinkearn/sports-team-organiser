@page "/admin/players/{PlayerUrlSegment}"
@layout AdminLayout
@inject IPlayerService PlayerService
@inject NavigationManager Navigation

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @_pageTitle</h1>

<ul class="nav nav-tabs">
	<li class="nav-item">
		<a class="nav-link active">Player</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" @onclick="SwitchTabTransactions">Transactions</a>
	</li>
</ul>

<AuthorizeView Policy="IsAdminEmail">
	<Authorized>

		<div class="mb-3 mt-3">
			<label class="form-label">Name</label>
			<InputText class="form-control"  @bind-Value="_player.Name" @bind-Value:after="Edit" />
		</div>

		<div class="mb-3">
			<label fclass="form-label">Position</label>
			<InputSelect class="form-select" @bind-Value="_player.Position" @bind-Value:after="() => Edit()">
				@foreach (var option in Enum.GetNames(typeof(Enums.PlayerPosition)))
				{
					<option value="@option">@option</option>
				}
			</InputSelect>
		</div>
		
		<div class="mb-3">
			<label class="form-label">Admin Rating</label>
			<InputNumber class="form-control" id="addAdminRating" min="1" max="5" @bind-Value="_player.AdminRating" @bind-Value:after="Edit" />
		</div>

		<div class="mb-3">
			<label class="form-label">Default Rate</label>
			<div class="input-group">
				<span class="input-group-text">Â£</span>
				<InputNumber type="number" min="0" class="form-control" id="addDefaultRate" @bind-Value="_player.DefaultRate" @bind-Value:after="Edit" />
			</div>
		</div>

		<div class="mb-3">
			<label class="form-label">Average Rating</label>
			<div class="form-control bg-body-secondary"><PlayerRating Rating="_player.Rating" Stars="true" /></div>
		</div>

		<div class="mb-3">
			<label class="form-label">Balance</label>
			<span class="form-control bg-body-secondary"><CurrencyDisplay Amount="@_player.Balance" /></span>
		</div>

		<div class="mb-3">
			<label class="form-label">Games Played</label>
			<div class="form-control bg-body-secondary">@_player.GamesCount</div>
		</div>
		
		<div class="mb-3">
			<label class="form-label">Url Segment</label>
			<InputText class="form-control bg-body-secondary" @bind-Value="_player.UrlSegment" disabled="true"  />
		</div>

		<div class="mb-3">
			<label class="form-label">Last Updated</label>
			<div class="form-control bg-body-secondary">@_player.LastUpdated</div>
		</div>

		<hr class="mb-4"/>
		<div class="hstack gap-2">
			<a class="btn btn-secondary" href="/players/"><i class="fa-solid fa-arrow-left"></i> All Players</a>
			<DeleteButtonWithCheck DeleteWhatLabel="@_player.Name" ButtonLabel="Delete" ParentPageCallback="DeletePlayer" />
		</div>

	</Authorized>
	<NotAuthorized>
		<h4>Access Denied!</h4>
		<a class="btn btn-secondary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
	</NotAuthorized>
</AuthorizeView>

@code {
	[CascadingParameter] public AdminLayout Layout { get; set; } = default!;
	
	[Parameter] public string PlayerUrlSegment { get; set; } = default!;

	private Player _player = default!;

	private string _pageTitle = default!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	async Task Edit()
	{
		await PlayerService.UpsertPlayerAsync(_player);
	}

	private async Task DeletePlayer()
	{
		await PlayerService.DeletePlayerAsync(_player.Id);
		Navigation.NavigateTo("/admin/players");
	}

	private void SwitchTabTransactions() => Navigation.NavigateTo($"/admin/players/{@PlayerUrlSegment}/transactions");

	private void RefreshData()
	{
		_player = PlayerService.GetPlayers().Single(p => p.UrlSegment == PlayerUrlSegment);
		_pageTitle = $"{_player.Name}";
		Layout.SetPageTitle(_pageTitle);
	}
}