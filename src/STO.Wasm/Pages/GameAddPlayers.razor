@page "/games/addplayerstogame"
@inject IPlayerService PlayerService
@inject IGameService GameService
@inject NavigationManager Navigation

<PageTitle>@_pageTitle</PageTitle>

<h1><i class="fa-solid fa-people-group me-2"></i> @_pageTitle</h1>

<div class="mb-3">
    <label class="form-label">Game</label>
    <InputSelect class="form-select" @bind-Value="_selectedGameRowKey" @bind-Value:after="RefreshGame">
        <option value="">Select Game ...</option>
        @foreach (var ge in _gameEntities)
        {
            var gameRowKey = ge.RowKey;
            if (gameRowKey == _nextGameEntity?.RowKey)
            {
                <option value="@gameRowKey" selected><EntityTitleLink RowKey="@ge.RowKey" EntityType="Enums.EntityType.GameEntity" Link="false" /></option>
            }
            else
            {
                <option value="@gameRowKey"><EntityTitleLink RowKey="@ge.RowKey" EntityType="Enums.EntityType.GameEntity" Link="false" /></option>
            }
        }
    </InputSelect>
</div>

<div class="mb-3">
    <label class="form-label">Playing status for prospective players</label>
    <InputSelect class="form-select" @bind-Value="_selectedPlayingStatus" >
        @foreach (var playingStatus in Enum.GetValues<Enums.PlayingStatus>())
        {
            <option value="@playingStatus">@playingStatus</option>
        }
    </InputSelect>
</div>

<div class="mb-3">
    <label class="form-label">Add prospective players</label>
    <InputSelect class="form-select" @bind-Value="_selectedProspectPagPlayerRowKey" @bind-Value:after="AddProspectPag">
        <option value="" selected>Choose Player ...</option>
        @foreach (var pe in _playerEntities)
        {
            <option value="@pe.RowKey">@pe.Name</option>
        }
    </InputSelect>
</div>

@if (_prospectPags.Count > 0)
{
    <div class="mb-3">
        <label class="form-label">Prospective players</label>
        @foreach (var prospectPag in _prospectPags)
        {
            <p><EntityTitleLink EntityType="Enums.EntityType.PlayerEntity" RowKey="@prospectPag.PlayerRowKey" Link="true" /> as @prospectPag.Forecast.ToString()</p>
        }
    </div>

    <div class="hstack gap-2">
        <button class="btn btn-secondary" @onclick="AddProspectPagsToGame"><i class="fa-solid fa-plus"></i> Add @_prospectPags.Count Players to Game</button>
    </div>   
}

@code {
    [CascadingParameter] public MainLayout MainLayout { get; set; } = default!;
    private List<GameEntity> _gameEntities = [];

    private List<PlayerEntity> _playerEntities = [];

    private List<PlayerAtGameEntity> _prospectPags = [];

    private string _selectedProspectPagPlayerRowKey = default!;

    private string _selectedGameRowKey = default!;

    private GameEntity _selectedGame = default!;

    private GameEntity _nextGameEntity = default!;

    private Enums.PlayingStatus _selectedPlayingStatus = default!;
    
    private string _pageTitle = default!;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void AddProspectPag()
    {
        var prospectPag = new PlayerAtGameEntity()
        {
            PlayerRowKey = _selectedProspectPagPlayerRowKey,
            GameRowKey = _selectedGameRowKey,
            Played = false,
            Forecast = _selectedPlayingStatus
        };
        _prospectPags.Add(prospectPag);
    }

    private async Task AddProspectPagsToGame()
    {
        foreach (var prospectPag in _prospectPags)
        {
            await GameService.UpsertPlayerAtGameEntityAsync(prospectPag);
        }

        var nav = $"/games/{_selectedGame.UrlSegment}";
        Navigation.NavigateTo(nav);
    }

    private void RefreshGame()
    {
        if (string.IsNullOrEmpty(_selectedGameRowKey)) return;
        _selectedGame = GameService.GetGameEntity(_selectedGameRowKey);
        _prospectPags.Clear();
    }

    private void RefreshData()
    {
        _gameEntities = GameService.GetGameEntities();
        _playerEntities = PlayerService.GetPlayerEntities();
        _nextGameEntity = GameService.GetNextGameEntity();
        _selectedGameRowKey = _nextGameEntity.RowKey;
        _selectedGame = _nextGameEntity;
        _pageTitle = "Add Players to Game";
        MainLayout.SetPageTitle(_pageTitle);
    }

}