@page "/games/{GameRowKey}/edit"
@inject IGameEntityService GameEntityService
@inject NavigationManager Navigation

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-people-group me-2"></i> Edit <GameEntityTitle GameEntity="@gameEntity" Link="false" /></h1>

<div class="mb-3">
    <label for="addDate" class="form-label">Date</label>
    <InputDate class="form-control" @bind-Value="gameEntity.Date" />
</div>
<div class="mb-3">
    <label for="addDate" class="form-label">Time</label>
    <div class="row">
        <div class="col-auto">
            <div class="input-group">
                <InputNumber class="form-control" min="0" max="23" @bind-Value="hour" @bind-Value:after="() => Edit()" />
                <InputNumber class="form-control" min="0" max="59" @bind-Value="minute" @bind-Value:after="() => Edit()" />
            </div>
        </div>
    </div>
</div>

<div class="mb-3">
    <label class="form-label">Title</label>
    <InputText class="form-control" @bind-Value="gameEntity.Title" @bind-Value:after="() => Edit()" />
</div>

<div class="mb-3">
    <label class="form-label">Notes</label>
    <InputText class="form-control" @bind-Value="gameEntity.Notes" @bind-Value:after="() => Edit()" />
</div>

<div class="modal-footer px-0">
    <a class="btn btn-primary" href="/games/@GameRowKey"><i class="fa-solid fa-arrow-left"></i>Back to Game</a>

    <AuthorizeView Policy="IsAdminEmail">
        <Authorized>
            <DeleteButtonWithCheck @rendermode="RenderMode.InteractiveAuto" DeleteWhatLabel="@pageTitle" ButtonLabel="Delete" ParentPageCallback="DeleteGame" />
        </Authorized>
        <NotAuthorized>
            <a class="btn btn-primary disabled"><i class="fa-solid fa-trash"></i> Delete</a>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [Parameter]
    public string GameRowKey { get; set; } = default!;

    private GameEntity gameEntity = default!;

    private int hour = default!;

    private int minute = default!;

    private string pageTitle = default!;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void Edit()
    {
        var dt = new DateTime(gameEntity.Date.Year, gameEntity.Date.Month, gameEntity.Date.Day, hour, minute, 0, DateTimeKind.Utc);
        gameEntity.Date = dt;
        GameEntityService.UpsertGameEntity(gameEntity);
    }

    private void DeleteGame()
    {
        GameEntityService.DeleteGameEntity(GameRowKey);
        Navigation.NavigateTo("/games");
    }

    private void RefreshData()
    {
        gameEntity = GameEntityService.GetGameEntity(GameRowKey);
        hour = gameEntity.Date.Hour;
        minute = gameEntity.Date.Minute;

        var gameDateLabel = gameEntity.Date.ToString("dd MMM");
        pageTitle = string.IsNullOrEmpty(gameEntity.Title) ? gameDateLabel : $"{gameDateLabel} {gameEntity.Title}";
    }
}