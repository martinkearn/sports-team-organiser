@page "/players/{PlayerRowKey}/player"
@inject IPlayerEntityService PlayerEntityService
@inject NavigationManager Navigation

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @_pageTitle</h1>

<ul class="nav nav-tabs">
	<li class="nav-item">
		<a class="nav-link active">Player</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" @onclick="SwitchTabTransactions">Transactions</a>
	</li>
</ul>

<div class="mb-3">
	<label class="form-label">Name</label>
	<InputText class="form-control" id="addName" @bind-Value="_player.PlayerEntity.Name" @bind-Value:after="() => Edit()" />
</div>

<div class="mb-3">
	<label fclass="form-label">Position</label>
	<InputSelect class="form-select" @bind-Value="_player.PlayerEntity.Position" @bind-Value:after="() => Edit()">
		@foreach (string option in Enum.GetNames(typeof(Enums.PlayerPosition)))
		{
			<option value="@option">@option</option>
		}
	</InputSelect>
</div>

<AuthorizeView Policy="IsAdminEmail">
	<Authorized>
		<div class="mb-3">
			<label class="form-label">Admin Rating</label>
			<InputNumber class="form-control" id="addAdminRating" min="1" max="5" @bind-Value="_player.PlayerEntity.AdminRating" @bind-Value:after="() => Edit()" />
			<div class="form-text">1-5 (5 high).</div>
		</div>

		<div class="mb-3">
			<label class="form-label">Default Rate</label>
			<div class="input-group">
				<span class="input-group-text">£</span>
				<InputNumber type="number" min="0" class="form-control" id="addDefaultRate" @bind-Value="_player.PlayerEntity.DefaultRate" @bind-Value:after="() => Edit()" />
			</div>
			<div class="form-text">Default rate per game. Usually £3 or £4.</div>
		</div>
	</Authorized>
</AuthorizeView>

<div class="mb-3">
	<label class="form-label">Balance</label>
	<span class="form-control-plaintext">
		<CurrencyDisplay Amount="@_player.Balance" />
	</span>
</div>

<div class="modal-footer">
	<a class="btn btn-primary" href="/players/"><i class="fa-solid fa-arrow-left"></i> All Players</a>
	<AuthorizeView Policy="IsAdminEmail">
		<Authorized>
			<DeleteButtonWithCheck DeleteWhatLabel="@_player.PlayerEntity.Name" ButtonLabel="Delete" ParentPageCallback="DeletePlayer" />
		</Authorized>
		<NotAuthorized>
			<a class="btn btn-primary disabled"><i class="fa-solid fa-trash"></i> Delete</a>
		</NotAuthorized>
	</AuthorizeView>
</div>


@code {
	[Parameter]
	public string PlayerRowKey { get; set; } = default!;

	private Player _player = default!;

	private string _pageTitle = default!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	async Task Edit()
	{
		await PlayerEntityService.UpsertPlayerEntityAsync(_player.PlayerEntity);
	}

	private async Task DeletePlayer()
	{
		await PlayerEntityService.DeletePlayerEntityAsync(PlayerRowKey);
		Navigation.NavigateTo("/players");
	}

	private void SwitchTabTransactions() => Navigation.NavigateTo($"/players/{@PlayerRowKey}/transactions");

	private void RefreshData()
	{
		// Get Player
		_player = PlayerEntityService.GetPlayer(PlayerRowKey);
		_pageTitle = $"{_player.PlayerEntity.Name}";
	}
}