@page "/players/{PlayerRowKey}/transactions"
@inject ICachedDataService DataService
@inject IPlayerEntityService PlayerEntityService
@inject ITransactionEntityService TransactionEntityService
@inject NavigationManager Navigation


<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @pageTitle</h1>

<AuthorizeView Policy="IsAdminEmail">
    <Authorized>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link" @onclick="SwitchTabPlayer">Player</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active">Transactions</a>
            </li>
        </ul>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Date</th>
                    <th scope="col">Amount</th>
                    <th scope="col" class="d-none d-lg-table-cell">Notes</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transactionEntity in playerTransactions)
                {
                    <tr>
                        <td><a href="/transactions/@transactionEntity.RowKey">@transactionEntity.Date.ToString("dd MMM")</a></td>
                        <td><CurrencyDisplay Amount="@transactionEntity.Amount" /></td>
                        <td class="d-none d-lg-table-cell">@transactionEntity.Notes</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="modal-footer">
            <a class="btn btn-primary" href="/players/"><i class="fa-solid fa-arrow-left"></i> All Players</a>
            <DeleteButtonWithCheck DeleteWhatLabel="@deleteAllLabel" ButtonLabel="Delete all transactions" ParentPageCallback="DeleteTransactionsForPlayer" />
        </div>
    </Authorized>
    <NotAuthorized>
        <h4>Access Denied!</h4>
        <a class="btn btn-primary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public string PlayerRowKey { get; set; } = default!;

    private List<TransactionEntity> playerTransactions = [];

    private string pageTitle = default!;

    private string deleteAllLabel = default!;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private async Task DeleteTransactionsForPlayer()
    {
        foreach (var te in playerTransactions)
        {
            await TransactionEntityService.DeleteTransactionEntityAsync(te.RowKey);
        }

        Navigation.NavigateTo("/players");
    }

    private void SwitchTabPlayer() => Navigation.NavigateTo($"/players/{@PlayerRowKey}/player");

    private void RefreshData()
    {
        // Get Player
        var playerEntity = PlayerEntityService.GetPlayerEntity(PlayerRowKey);

        // Get Transactions
        playerTransactions = DataService.TransactionEntities.Where(o => o.PlayerRowKey == PlayerRowKey)
            .OrderByDescending(o => o.Date)
            .ToList();

        deleteAllLabel = $"All transactions for {playerEntity?.Name}";
        pageTitle = $"{playerEntity?.Name}";
    }
}