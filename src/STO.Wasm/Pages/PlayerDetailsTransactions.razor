@page "/players/{PlayerUrlSegment}/transactions"
@using STO.Models.Interfaces
@inject IPlayerService PlayerService
@inject ITransactionService TransactionService
@inject NavigationManager Navigation

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @_pageTitle</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" @onclick="SwitchTabPlayer">Player</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active">Transactions</a>
    </li>
</ul>

<AuthorizeView Policy="IsAdminEmail">
    <Authorized>

        <div class="mb-3 mt-3">
            <p>Current balance is <CurrencyDisplay Amount="@_playerTransactions.Sum(t => t.Amount)" /></p>
        </div>

        <table class="table table-striped">
            <thead>
            <tr>
                <th scope="col">Date</th>
                <th scope="col">Amount</th>
                <th scope="col" class="d-none d-lg-table-cell">Notes</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var transaction in _playerTransactions)
            {
                <tr>
                    <td><EntityTitleLink EntityType="Enums.EntityType.TransactionEntity" RowKey="@transaction.Id" Length="Enums.TitleLength.Long" Link="true" /></td>
                    <td><CurrencyDisplay Amount="@transaction.Amount" /></td>
                    <td class="d-none d-lg-table-cell">@transaction.Notes</td>
                </tr>
            }
            </tbody>
        </table>
        
        <hr class="mb-4"/>

        @if (_showLongRunning)
        {
            <LongRunning />
        }
        else
        {
            <div class="hstack gap-2">
                <a class="btn btn-secondary" href="/players/"><i class="fa-solid fa-arrow-left"></i> All Players</a>
                <DeleteButtonWithCheck DeleteWhatLabel="@_deleteAllLabel" ButtonLabel="Delete all transactions" ParentPageCallback="DeleteTransactionsForPlayer" />
            </div>
        }
        
    </Authorized>
    <NotAuthorized>
        <h4>Access Denied!</h4>
        <a class="btn btn-secondary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
    </NotAuthorized>
</AuthorizeView>


@code {
    [CascadingParameter] public MainLayout MainLayout { get; set; } = null!;
    
    [Parameter] public string PlayerUrlSegment { get; set; } = null!;

    private List<Transaction> _playerTransactions = [];
    
    private bool _showLongRunning;

    private string _pageTitle = null!;

    private string _deleteAllLabel = null!;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private async Task DeleteTransactionsForPlayer()
    {
        _showLongRunning = true;
        StateHasChanged();
        
        foreach (var t in _playerTransactions)
        {
            await TransactionService.DeleteTransactionAsync(t.Id);
        }

        Navigation.NavigateTo("/players");
    }

    private void SwitchTabPlayer() => Navigation.NavigateTo($"/players/{@PlayerUrlSegment}");

    private void RefreshData()
    {
        // Get Player
        var player = PlayerService.GetPlayers().Single(p => p.UrlSegment == PlayerUrlSegment);

        // Get Transactions
        _playerTransactions = TransactionService.GetTransactions(null, null, player.Id);

        _deleteAllLabel = $"All transactions for {player.Name}";
        _pageTitle = $"{player.Name}";
        MainLayout.SetPageTitle(_pageTitle);
    }
}