@page "/playerstochase"
@inject IPlayerService PlayerService
@inject IGameService GameService

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-user me-2"></i> @_pageTitle</h1>

<h2>Recent Games</h2>

<InputSelect class="form-select" @bind-Value="_selectedGameRowKey" @bind-Value:after="GameSelected">
    <option value="">Select Game ...</option>
    @foreach (var game in _recentGames)
    {
        <option value="@game.RowKey">
            <EntityTitleLink EntityType="Enums.EntityType.GameEntity" RowKey="@game.RowKey" Link="false" />
        </option>
    }
</InputSelect>

<p>@_selectedGameRowKey</p>

<p>Players who have played in the past @_recentGames.Count games but are not in the selected game.</p>
@foreach (var player in _recentPlayersNotAtSelectedGame)
{
    <p>@player.Name</p>
}

@code {
    [CascadingParameter] public MainLayout MainLayout { get; set; } = default!;
    private string _pageTitle = default!;
    private List<GameEntity> _recentGames = default!;
    private string _selectedGameRowKey = default!;
    private List<PlayerEntity> _recentPlayersNotAtSelectedGame = [];

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void GameSelected()
    {
        var pagsInRecentGamesNotSelectedGame = GameService.GetPlayerAtGameEntities()
            .Where(o => _recentGames.Select(g => g.RowKey).Contains(o.GameRowKey) && o.GameRowKey != _selectedGameRowKey)
            .ToList();

        _recentPlayersNotAtSelectedGame.Clear();
        _recentPlayersNotAtSelectedGame = PlayerService.GetPlayerEntitiesFromPags(pagsInRecentGamesNotSelectedGame);
    }
    
    private void RefreshData()
    {
        _recentGames = GameService.GetGameEntities()
            .OrderByDescending(g => g.Date)
            .Take(2)
            .ToList();
        
        // Set next game as default
        var nextGameEntity = GameService.GetNextGameEntity();
        _selectedGameRowKey = nextGameEntity.RowKey;
        GameSelected();
        
        _pageTitle = "Players to chase";
        MainLayout.SetPageTitle(_pageTitle);
    }

}