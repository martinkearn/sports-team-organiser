@page "/ratings/{RatingRowKey}"
@inject IRatingEntityService RatingEntityService
@inject IPlayerEntityService PlayerEntityService
@inject IGameService GameService
@inject NavigationManager Navigation

<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-regular fa-star me-2"></i> @pageTitle</h1>

<AuthorizeView Policy="IsAdminEmail">
	<Authorized>
		<p>Ratings cannot be edited, only deleted</p>

		<h5>Date & Time</h5>
		<p>@RatingEntityService.FormatRatingTime(ratingEntity.RowKey)</p>

		<h5>Player</h5>
		<p><a href="players/@ratingEntity.PlayerRowKey/player">@playerEntity.Name</a></p>

		<h5>Game</h5>
		<p><GameTitle GameRowKey="@ratingEntity.GameRowKey" Link="true" /></p>

		<h5>Rating</h5>
		<p>@ratingEntity.Rating</p>

		<h5>Notes</h5>
		@if (ratingEntity?.Notes is not null)
		{
			<p>@ratingEntity.Notes</p>
		}
		else
		{
			<p>No Notes</p>
		}

		<div class="modal-footer">
			<a class="btn btn-primary" href="/ratings/"><i class="fa-solid fa-arrow-left"></i>All Ratings</a>
			<DeleteButtonWithCheck DeleteWhatLabel="@pageTitle" ButtonLabel="Delete" ParentPageCallback="DeleteRating" />
		</div>
	</Authorized>
	<NotAuthorized>
		<h4>Access Denied!</h4>
		<a class="btn btn-primary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
	</NotAuthorized>
</AuthorizeView>

@code {
	[Parameter]
	public string RatingRowKey { get; set; } = default!;

	private RatingEntity ratingEntity = default!;

	private PlayerEntity playerEntity = default!;

	private GameEntity gameEntity = default!;

	private string pageTitle = default!;

	protected override async Task OnInitializedAsync()
	{
		await RefreshData();
	}

	private void DeleteRating()
	{
		RatingEntityService.DeleteRatingEntity(RatingRowKey);
		Navigation.NavigateTo("/ratings");
	}

	async Task RefreshData()
	{
		ratingEntity = RatingEntityService.GetRatingEntity(RatingRowKey);
		playerEntity = PlayerEntityService.GetPlayerEntity(ratingEntity.PlayerRowKey);
		var game = await GameService.GetGame(ratingEntity.GameRowKey);
		gameEntity = game.GameEntity;
		pageTitle = $"Rating for {@playerEntity.Name}, {@gameEntity.Date.Date.ToShortDateString()}";
	}
}