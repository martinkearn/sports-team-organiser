@page "/transactions/add"
@inject ITransactionService TransactionService
@inject IPlayerService PlayerService
@inject NavigationManager Navigation


<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @_pageTitle</h1>

<AuthorizeView Policy="IsAdminEmail">
	<Authorized>
		<EditForm Model="@_newTransactionEntity" OnValidSubmit="Add" Context="newTransactionEntity">
			<DataAnnotationsValidator />
			<ValidationSummary />
			<div class="mb-3">
				<label for="addPlayerRowKey" class="form-label">Player</label>
				<InputSelect class="form-select" @bind-Value="_newTransactionEntity.PlayerRowKey">
					<option value="">Select Player ...</option>
					@foreach (var pe in _playerEntities)
					{
						<option value="@pe.RowKey">@pe.Name</option>
					}
				</InputSelect>
			</div>

			<div class="mb-3">
				<label for="addDate" class="form-label">Date</label>
				<InputDate class="form-control" id="addDate" @bind-Value="_newTransactionEntity.Date" />
			</div>

			<div class="mb-3">
				<label for="addNotes" class="form-label">Notes</label>
				<InputText class="form-control" id="addNotes" @bind-Value="_newTransactionEntity.Notes" />
			</div>

			<div class="mb-3">
				<label for="addAmount" class="form-label">Amount</label>
				<div class="input-group">
					<span class="input-group-text">Â£</span>
					<InputNumber type="number" class="form-control" id="addAmount" @bind-Value="_newTransactionEntity.Amount" />
				</div>
				<div class="form-text">Positive for payments, negative to pay for a played game.</div>
			</div>

			<div class="modal-footer">
				<button type="submit" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Add Transaction</button>
			</div>
		</EditForm>
	</Authorized>
	<NotAuthorized>
		<h4>Access Denied!</h4>
		<a class="btn btn-primary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
	</NotAuthorized>
</AuthorizeView>


@code {
	private List<PlayerEntity> _playerEntities = [];

	private TransactionEntity _newTransactionEntity = new();

	private string _pageTitle = default!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	protected async Task Add()
	{
		await TransactionService.UpsertTransactionEntityAsync(_newTransactionEntity);
		Navigation.NavigateTo("/transactions");
	}

	private void RefreshData()
	{
		_newTransactionEntity = new();
		_playerEntities = PlayerService.GetPlayerEntities();
		_pageTitle = "Add Transaction";
	}
}