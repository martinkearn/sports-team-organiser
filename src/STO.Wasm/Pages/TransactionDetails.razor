@page "/transactions/{TransactionRowKey}"
@inject ITransactionEntityService TransactionEntityService
@inject IPlayerEntityService PlayerEntityService
@inject NavigationManager Navigation


<PageTitle>TNF - @pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @pageTitle</h1>

<AuthorizeView Policy="IsAdminEmail">
	<Authorized>
		<p>Transactions cannot be edited, only deleted</p>

		<h5>Row Key</h5>
		<p>@transactionEntity.RowKey</p>

		<h5>Date</h5>
		<p>@transactionEntity.Date.ToString("dd MMM yyyy HH:mm")</p>

		<h5>Amount</h5>
		<p><CurrencyDisplay Amount="@transactionEntity.Amount"></CurrencyDisplay></p>

		<h5>Notes</h5>
		@if (transactionEntity.Notes is not null)
		{
			<p>@transactionEntity.Notes</p>
		}
		else
		{
			<p>No Notes</p>
		}

		<h5>Player</h5>
		<p><PlayerName Link="true" PlayerRowKey="@transactionEntity.PlayerRowKey" /></p>

		<div class="modal-footer">
			<a class="btn btn-primary" href="/transactions/"><i class="fa-solid fa-arrow-left"></i> All Transactions</a>
			<DeleteButtonWithCheck DeleteWhatLabel="@pageTitle" ButtonLabel="Delete" ParentPageCallback="DeleteTransaction" />
		</div>
	</Authorized>
	<NotAuthorized>
		<h4>Access Denied!</h4>
		<a class="btn btn-primary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
	</NotAuthorized>
</AuthorizeView>


@code {
	[Parameter]
	public string TransactionRowKey { get; set; } = default!;

	private TransactionEntity transactionEntity = default!;

	private string pageTitle = default!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	private async Task DeleteTransaction()
	{
		await TransactionEntityService.DeleteTransactionEntityAsync(TransactionRowKey);
		Navigation.NavigateTo("/transactions");
	}

	private void RefreshData()
	{
		transactionEntity = TransactionEntityService.GetTransactionEntity(TransactionRowKey);
		var playerEntity = PlayerEntityService.GetPlayerEntity(transactionEntity.PlayerRowKey);
		pageTitle = $"Transaction for {@playerEntity.Name}, {@transactionEntity.Date.Date.ToShortDateString()}";
	}
}