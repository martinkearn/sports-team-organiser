@page "/transactions/{TransactionUrlSegment}"
@using System.Globalization
@inject ITransactionService TransactionService
@inject NavigationManager Navigation

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @_pageTitle</h1>

<AuthorizeView Policy="IsAdminEmail">
	<Authorized>

		<p>Transactions cannot be edited, only deleted</p>

		<h5>Id</h5>
		<p>@_transaction.Id</p>

		<h5>UrlSegment</h5>
		<p>@_transaction.UrlSegment</p>

		<h5>Date</h5>
		<p>@_transaction.DateTime.ToString(CultureInfo.CurrentCulture)</p>

		<h5>Amount</h5>
		<p><CurrencyDisplay Amount="@_transaction.Amount"></CurrencyDisplay></p>

		<h5>Notes</h5>
		@if (_transaction.Notes is not null)
		{
			<p>@_transaction.Notes</p>
		}
		else
		{
			<p>No Notes</p>
		}

		<h5>Game</h5>
		@if (_transaction.GameId != null)
		{
			<p><EntityTitleLink EntityType="Enums.EntityType.GameEntity" RowKey="@_transaction.GameId" Length="Enums.TitleLength.Long" Link="true" /></p>
		}
		else
		{
			<p>No Game</p>
		}

		<h5>Player</h5>
		<p><PlayerLink PlayerName="@_transaction.PlayerName" PlayerUrlSegment="@_transaction.PlayerUrlSegment" /></p>

		<div class="hstack gap-2">
			<a class="btn btn-secondary" href="/transactions/"><i class="fa-solid fa-arrow-left"></i> All Transactions</a>
			<DeleteButtonWithCheck DeleteWhatLabel="@_pageTitle" ButtonLabel="Delete" ParentPageCallback="DeleteTransaction" />
		</div>

	</Authorized>
	<NotAuthorized>
		<h4>Access Denied!</h4>
		<a class="btn btn-secondary" href="authentication/login"><i class="fa-solid fa-key me-2"></i> Log in</a>
	</NotAuthorized>
</AuthorizeView>

@code {
	[CascadingParameter] public MainLayout MainLayout { get; set; } = null!;
	
	[Parameter]
	public string TransactionUrlSegment { get; set; } = null!;

	private Transaction _transaction = null!;

	private string _pageTitle = null!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	private async Task DeleteTransaction()
	{
		await TransactionService.DeleteTransactionAsync(_transaction.Id);
		Navigation.NavigateTo("/transactions");
	}

	private void RefreshData()
	{
		_transaction = TransactionService.GetTransactionByUrlSegment(TransactionUrlSegment);
		_pageTitle = $"Transaction for {_transaction.PlayerName}, {_transaction.DateTime.Date.ToShortDateString()}";
		MainLayout.SetPageTitle(_pageTitle);
	}
}