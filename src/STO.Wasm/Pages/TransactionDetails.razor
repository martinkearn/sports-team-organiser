@page "/transactions/{TransactionUrlSegment}"
@inject ITransactionEntityService TransactionEntityService
@inject IPlayerEntityService PlayerEntityService
@inject NavigationManager Navigation

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @_pageTitle</h1>

<p>Transactions cannot be edited, only deleted</p>

<h5>Row Key</h5>
<p>@_transactionEntity.RowKey</p>

<h5>UrlSegment</h5>
<p>@_transactionEntity.UrlSegment</p>

<h5>Date</h5>
<p><EntityTitleLink EntityType="Enums.EntityType.TransactionEntity" RowKey="@_transactionEntity.RowKey" Length="Enums.TitleLength.Long" Link="false" /></p>

<h5>Amount</h5>
<p><CurrencyDisplay Amount="@_transactionEntity.Amount"></CurrencyDisplay></p>

<h5>Notes</h5>
@if (_transactionEntity.Notes is not null)
{
	<p>@_transactionEntity.Notes</p>
}
else
{
	<p>No Notes</p>
}

<h5>Player</h5>
<p><EntityTitleLink EntityType="Enums.EntityType.PlayerEntity" RowKey="@_transactionEntity.PlayerRowKey" Link="true" /></p>

<div class="hstack gap-2">
	<a class="btn btn-secondary" href="/transactions/"><i class="fa-solid fa-arrow-left"></i> All Transactions</a>
	<DeleteButtonWithCheck DeleteWhatLabel="@_pageTitle" ButtonLabel="Delete" ParentPageCallback="DeleteTransaction" />
</div>

@code {
	[CascadingParameter] public MainLayout MainLayout { get; set; } = default!;
	
	[Parameter]
	public string TransactionUrlSegment { get; set; } = default!;

	private TransactionEntity _transactionEntity = default!;

	private string _pageTitle = default!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	private async Task DeleteTransaction()
	{
		await TransactionEntityService.DeleteTransactionEntityAsync(_transactionEntity.RowKey);
		Navigation.NavigateTo("/transactions");
	}

	private void RefreshData()
	{
		_transactionEntity = TransactionEntityService.GetTransactionEntityByUrlSegment(TransactionUrlSegment);
		var playerEntity = PlayerEntityService.GetPlayerEntity(_transactionEntity.PlayerRowKey);
		_pageTitle = $"Transaction for {@playerEntity.Name}, {_transactionEntity.Date.Date.ToShortDateString()}";
		MainLayout.SetPageTitle(_pageTitle);
	}
}