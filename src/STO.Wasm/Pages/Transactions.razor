@page "/transactions"
@inject ITransactionService TransactionService

<PageTitle>TNF - @_pageTitle</PageTitle>

<h1><i class="fa-solid fa-coins me-2"></i> @_pageTitle</h1>

<table class="table table-striped">
	<thead>
	<tr>
		<th scope="col">Date</th>
		<th scope="col">Amount</th>
		<th scope="col" class="d-none d-lg-table-cell">Player</th>
		<th scope="col" class="d-none d-lg-table-cell">Notes</th>
	</tr>
	</thead>
	<tbody>
	@foreach (var t in _transactions)
	{
		<tr>
			<td><EntityTitleLink EntityType="Enums.EntityType.TransactionEntity" RowKey="@t.Id" Length="Enums.TitleLength.Long" Link="true" /></td>
			<td><CurrencyDisplay Amount="@t.Amount" /></td>
			<td class="d-none d-lg-table-cell">@t.PlayerEntity.Name</td>
			<td class="d-none d-lg-table-cell">@t.Notes</td>
		</tr>
	}
	</tbody>
</table>

<p>Showing @_transactions.Count items.</p>

<div class="hstack gap-2">
	<a class="btn btn-secondary" title="Show More" @onclick="ShowMore"><i class="fa-solid fa-arrow-down"></i> Show @_itemsPerPage More</a>
</div>


@code {
	[CascadingParameter] public MainLayout MainLayout { get; set; } = default!;

	private List<Transaction> _transactions = [];

	private readonly int _itemsPerPage = 20;
	
	private string _pageTitle = default!;

	protected override void OnInitialized()
	{
		RefreshData();
	}

	private void ShowMore()
	{
		var addedTransactions = TransactionService
			.GetTransactions(_transactions.Count, _itemsPerPage)
			.ToList();
		
		_transactions.AddRange(addedTransactions);
	}

	private void RefreshData()
	{
		_transactions = TransactionService
			.GetTransactions(0, _itemsPerPage)
			.ToList();
		
		_pageTitle = "Transactions";
		MainLayout.SetPageTitle(_pageTitle);
	}
}